
# https://raspberry-hosting.com/en/faq/how-install-apache2-php-fpm-raspberry-pi
# https://drbd.linbit.com/users-guide/ch-build-install-from-source.html
# http://oss.linbit.com/drbd/
wget http://oss.linbit.com/drbd/8.3/drbd-8.3.16.tar.gz

sudo apt-get install -y make gcc flex
./user/v9/Makefile.in
./user/shared/Makefile.in
./user/v84/Makefile.in
./user/v83/Makefile.in
./Makefile.in
./documentation/v9/Makefile.in
./documentation/v84/Makefile.in
./documentation/v83/Makefile.in
./scripts/Makefile.in

find ./ -name Makefile.in | xargs -I {} sed -ri 's/localstatedir = @localstatedir@/localstatedir = \/var/g' {}
find ./ -name Makefile.in | xargs -I {} sed -ri 's/datarootdir = @datarootdir@/datarootdir = \/data/g' {}
find ./ -name Makefile.in | xargs -I {} sed -ri 's/datadir = @datadir@/datadir = \/data/g' {}
find ./ -name Makefile.in | xargs -I {} sed -ri 's/sysconfdir = @sysconfdir@/sysconfdir = \/etc/g' {}
find ./ -name Makefile.in | xargs -I {} sed -ri 's/sbindir = @sbindir@/sbindir = \/sbin/g' {}
find ./ -name Makefile.in | xargs -I {} sed -ri 's/LIBDIR = @prefix@\/lib\/@PACKAGE_TARNAME@/LIBDIR = \/lib/g' {}
find ./ -name Makefile.in | xargs -I {} sed -ri 's/mandir = @mandir@/mandir = \/doc/g' {}
find ./ -name Makefile.in | xargs -I {} sed -ri 's/\/usr\/lib\/ocf/\/lib\/ocf/g' {}

./configure --prefix=/opt/drbd-utils --with-pacemaker --with-bashcompletion
make -j 5
export DESTDIR=/opt/drbd-utils
make doc
make install

sudo ln -s /opt/drbd/sbin/drbdadm /usr/sbin/drbdadm
sudo ln -s /opt/drbd/sbin/drbdmeta /usr/sbin/drbdmeta
sudo ln -s /opt/drbd/sbin/drbdsetup /usr/sbin/drbdsetup
sudo ln -s /opt/drbd/sbin/drbd-overview /usr/sbin/drbd-overview

sudo apt-get install drbd8-utils
sudo modprobe drbd
sudo lsmod | grep drbd

# https://wiki.debian.org/DrBd
cd /etc/drbd.d/
vim git-repo.res

resource www-data 
{
	protocol C;
	startup { wfc-timeout 0; degr-wfc-timeout 120; }
	disk { on-io-error detach; }
	
	on rp-blcr-21
	{
		device    /dev/drbd0;
		disk      /dev/loop0;
		address   10.1.1.21:7789;
		meta-disk internal;
	}
	
	on rp-blcr-22
	{
		device    /dev/drbd0;
		disk      /dev/loop0;
		address   10.1.1.22:7789;
		meta-disk internal;
	}
}

# zero out device
dd if=/dev/zero of=drbd-partition.img bs=1M count=1024
sudo losetup /dev/loop0 drbd-partition.img
sudo mkfs -t ext3 /dev/loop0
sudo dd if=/dev/zero of=/dev/loop0 bs=1M count=1024

sudo drbdadm create-md www-data
sudo drbdadm up www-data        #on 8.4 may be optional cause resource is auto up'd
# on primary drbd 8.3
sudo drbdadm --overwrite-data-of-peer primary www-data
# or drbd 8.4
sudo drbdadm primary --force www-data
sudo drbdadm primary www-data

sudo mkfs.ext3 /dev/drbd0


6.17.2. Automatic split brain recovery policies

In order to be able to enable and configure DRBD’s automatic split brain recovery policies, you must understand that DRBD offers several configuration options for this purpose. DRBD applies its split brain recovery procedures based on the number of nodes in the Primary role at the time the split brain is detected. To that end, DRBD examines the following keywords, all found in the resource’s net configuration section:

after-sb-0pri. Split brain has just been detected, but at this time the resource is not in the Primary role on any host. For this option, DRBD understands the following keywords:

disconnect: Do not recover automatically, simply invoke the split-brain handler script (if configured), drop the connection and continue in disconnected mode.
discard-younger-primary: Discard and roll back the modifications made on the host which assumed the Primary role last.
discard-least-changes: Discard and roll back the modifications on the host where fewer changes occurred.
discard-zero-changes: If there is any host on which no changes occurred at all, simply apply all modifications made on the other and continue.

after-sb-1pri. Split brain has just been detected, and at this time the resource is in the Primary role on one host. For this option, DRBD understands the following keywords:
disconnect: As with after-sb-0pri, simply invoke the split-brain handler script (if configured), drop the connection and continue in disconnected mode.
consensus: Apply the same recovery policies as specified in after-sb-0pri. If a split brain victim can be selected after applying these policies, automatically resolve. Otherwise, behave exactly as if disconnect were specified.
call-pri-lost-after-sb: Apply the recovery policies as specified in after-sb-0pri. If a split brain victim can be selected after applying these policies, invoke the pri-lost-after-sb handler on the victim node. This handler must be configured in the handlers section and is expected to forcibly remove the node from the cluster.
discard-secondary: Whichever host is currently in the Secondary role, make that host the split brain victim.

after-sb-2pri. Split brain has just been detected, and at this time the resource is in the Primary role on both hosts. This option accepts the same keywords as after-sb-1pri except discard-secondary and consensus.

[Note]	Note
DRBD understands additional keywords for these three options, which have been omitted here because they are very rarely used. Refer to drbd.conf(5) for details on split brain recovery keywords not discussed here.

For example, a resource which serves as the block device for a GFS or OCFS2 file system in dual-Primary mode may have its recovery policy defined as follows:

resource <resource> {
  handlers {
    split-brain "/usr/lib/drbd/notify-split-brain.sh root"
    ...
  }
  net {
    after-sb-0pri discard-zero-changes;
    after-sb-1pri discard-secondary;
    after-sb-2pri disconnect;
    ...
  }
  ...
}




# https://wiki.ubuntu.com/ClusterStack/Natty#A.5Bboth.5D_Install_Pacemaker_and_Corosync

#Source
sudo apt-get install -y dh-autoreconf \
librpm-dev librpm3 librpmbuild3 \
rpm-common yum \
libuuid1 uuid-dev uuid-runtime \
libxslt1-dev libqb-dev libqb0 \
libnss3 libnss3-1d libnss3-dev libnss3-tools \
grap groff groff-base \
libglib2.0-0 libglib2.0-bin \
libglib2.0-cil libglib2.0-cil-dev \
libglib2.0-data libglib2.0-dev \
libcpg4 libcpg-dev libcfg4 libcfg-dev \
cluster-glue cluster-glue-dev \
libcluster-glue libcluster-glue-dev \
dbus libdbus-1-3 libdbus-1-dev \
libdconf-dbus-1-0 libdconf-dbus-1-dev

git clone git://github.com/ClusterLabs/libqb.git
cd libqb
./autogen.sh && ./configure --prefix=/usr
make && sudo make install

# pacemaker
# http://clusterlabs.org/wiki/Install
# http://clusterlabs.org/wiki/SourceInstall
# http://angryelectron.com/corosync-on-ubuntu1204/
# http://zeldor.biz/2010/12/activepassive-cluster-with-pacemaker-corosync/
# http://www.tokiwinter.com/clustering-with-drbd-corosync-and-pacemaker/

cd ./pacemaker
# change corosync/corotypes.h if received not found error
/* #include <corosync/corotypes.h> */
#include </opt/cluster/include/corosync/corotypes.h>
vim ./include/crm_internal.h
vim /usr/include/corosync/cpg.h


sudo apt-get install -y corosync corosync-dev \
pacemaker pacemaker-dev \
resource-agents resource-agents-dev \
ocfs2console ocfs2-tools-cman \
libdlm3 libdlmcontrol3 libsackpt3 \
ocfs2-tools ocfs2-tools-dev ocfs2-tools-pacemaker

sudo chkconfig pacemaker off
sudo chkconfig corosync on

4. Initial corosync configuration:
Generate key for openais and copy it to node

root@node-1:~# corosync-keygen
root@node-1:~# scp /etc/corosync/authkey node-2:/etc/corosync/authkey

vim /etc/default/corosync
START=yes
scp /etc/default/corosync node-2:/etc/default/corosync
The only block you must change is the network one:
bindnetaddr: 10.1.1.0
scp /etc/corosync/corosync.conf node-2:/etc/corosync/corosync.conf

# corosync starts but pacemaker won't
# http://blog.clusterlabs.org/blog/2010/introducing-the-pacemaker-master-control-process-for-corosync-based-clusters/
The definition of the ver: #
0 = corosync + pacemaker plugin (v0)
1 = corosync + pacemaker plugin (v1) + mcp
2 = corosync + cpg + cman + mcp
3 = corosync + cpg + quorumd + mcp

service corosync start
service pacemaker start

# Check cluster status:
crm_mon --one-shot -V
crm_verify -L
Take a look on your logs:
less /var/log/corosync/corosync.log

# First cluster resource:
# We now turn off STONITH since we don’t need it in this example configuration:
crm configure property stonith-enabled=false
# Disable Quorum
crm configure property no-quorum-policy=ignore

# Now we add our first resource, virtual-IP to the configuration:
# http://www.linux-ha.org/wiki/OCF_Resource_Agents
crm configure primitive ONERING-ADDR ocf:heartbeat:IPaddr2 params ip="10.1.1.20" cidr_netmask=32 nic="eth0" op monitor interval="10s" meta is-managed="true"

# OCF Resource Agents are those found in /usr/lib/ocf/resource.d/provider
# http://www.linux-ha.org/wiki/OCF_Resource_Agents
# http://www.unixmen.com/adding-deleting-cluster-resources-corosync-pacemaker-2/
# http://clusterlabs.org/man/pacemaker/
# http://www.sebastien-han.fr/blog/2012/04/30/failover-active-passive-on-nfs-using-pacemaker-and-drbd/
# https://www.suse.com/documentation/sle_ha/book_sleha/data/sec_ha_config_crm_resources.html

# Deleting Resource
crm resource stop <resource>
crm configure delete <resource>
# crm config file:
find /var/lib/ -iname cib.xml
/var/lib/heartbeat/crm/cib.xml

sudo crm configure 
primitive DRBD_SVN ocf:linbit:drbd params drbd_resource="svn" \
op monitor interval=29s role=Master \
op monitor interval=31s role=Slave \
op start interval=0 timeout=300s \
op stop interval=0 timeout=120s

ms SM_SVN DRBD_SVN \
meta master-max=1 master-node-max=1 \
clone-max=2 clone-node-max=1 notify=true

primitive FS_SVN ocf:heartbeat:Filesystem params \
device=/dev/drbd0 directory=/opt/svn fstype=ext3 \
op start interval=0 timeout=300s \
op stop interval=0 timeout=120s

colocation SVN_DRBD_COLO INFINITY: FS_SVN SM_SVN:Master
order SFS_AFTER_DRBD mandatory: SM_SVN:promote FS_SVN:start

primitive DRBD_WWW ocf:linbit:drbd params drbd_resource="www" \
op monitor interval=29s role=Master \
op monitor interval=31s role=Slave \
op start interval=0 timeout=300s \
op stop interval=0 timeout=120s

ms SM_WWW DRBD_WWW \
meta master-max=1 master-node-max=1 \
clone-max=2 clone-node-max=1 notify=true

primitive FS_WWW ocf:heartbeat:Filesystem params \
device=/dev/drbd1 directory=/opt/www fstype=ext3 \
op start interval=0 timeout=300s \
op stop interval=0 timeout=120s

colocation WWW_DRBD_COLO INFINITY: FS_WWW SM_WWW:Master
order WFS_AFTER_DRBD mandatory: SM_WWW:promote FS_WWW:start

primitive DRBD_SQL ocf:linbit:drbd params drbd_resource="msql" \
op monitor interval=29s role=Master \
op monitor interval=31s role=Slave \
op start interval=0 timeout=300s \
op stop interval=0 timeout=120s

ms SM_SQL DRBD_SQL \
meta master-max=1 master-node-max=1 \
clone-max=2 clone-node-max=1 notify=true

primitive FS_SQL ocf:heartbeat:Filesystem params \
device=/dev/drbd2 directory=/opt/mysql fstype=ext3 \
op start interval=0 timeout=300s \
op stop interval=0 timeout=120s

colocation SQL_DRBD_COLO INFINITY: FS_SQL SM_SQL:Master
order MFS_AFTER_DRBD mandatory: SM_SQL:promote FS_SQL:start

group INB4 FS_SQL FS_WWW FS_SVN ONERING-ADDR

primitive MySQLD ocf:heartbeat:mysql params config="/etc/my.cnf" \
op monitor interval="60s" timeout="30s" \
op start timeout="120s" op stop timeout="120s"

order SQLD_AFTER_INB4 mandatory: INB4 MySQLD

primitive Apache2 ocf:heartbeat:apache  \
params configfile=/etc/apache2/apache2.conf \
statusurl="http://localhost/server-status" \
op monitor interval=1min

show
commit

# if encountered the unmanaged error on both nodes:
# stop pacemaker & corosync; start drbd; start pacemake & corosync

# Error
# http://www.sebastien-han.fr/blog/2012/04/25/DRBD-split-brain/
